name: Containerize

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths: [ "app/**", "requirements.txt", ".dockerignore", "Dockerfile" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "app/**", "requirements.txt", ".dockerignore", "Dockerfile" ]

permissions:
  id-token: write
  contents: read

jobs:
  login-to-amazon-ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ap-northeast-2
          role-to-assume: arn:aws:iam::637423298185:role/github-actions-for-ecr-push
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'
    outputs:
      # registry: ${{ steps.login-ecr.outputs.registry }}
      docker_username: ${{ steps.login-ecr.outputs.docker_username_public_ecr_aws }}
      docker_password: ${{ steps.login-ecr.outputs.docker_password_public_ecr_aws }}

  docker:
    name: Push docker image to dockerhub and aws registry
    runs-on: ubuntu-latest
    needs: login-to-amazon-ecr
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ needs.login-to-amazon-ecr.outputs.docker_username }}
        password: ${{ needs.login-to-amazon-ecr.outputs.docker_password }}
    - name: Login to Public ECR
      uses: docker/login-action@v3
      with:
        registry: public.ecr.aws
        username: ${{ secrets.AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      env:
        AWS_REGION: "ap-northeast-2"
    - name: Get timestamp
      id: timestamp
      run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: codinggroot/narae:${{ env.TIMESTAMP }},codinggroot/narae:latest,public.ecr.aws/u5h7r6e3/narae:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
